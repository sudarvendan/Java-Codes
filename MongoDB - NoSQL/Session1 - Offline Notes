MongoDB - No SQL

1. Overview of SQL DB
2. Difference between NoSQL and SQL
3. BASE Properties
4. Types of NoSQL DB and Uses

No Need to query multiple tables

document structure or json structure -- key:value or field:value pair

Sample data

{
  "_id" : ObjectId("Ddomdindissd"),
  "Order_ID" : 12111,
  "Component" : "Plantronics",
  "Price" : 3999,
}

data present at one place.

Difference

SQL / Oracle - Tables with relation with each other - Fixed Schema

NoSQL - Dynamic Schema
------------------------------------------------------
SQL - Vertical Scaling - Data stored in one Server

NoSQL - Horizontal Scaling - Data stored in multiple servers
-------------------------------------------------------
Used Cases
SQL - Transactional Mostly, Complex Queries
NoSQL - Transactional Possible, Complex Databases
-------------------------------------------------------
I - SQL databases are ideally suited for vertical scaling whereas
NoSQL databases are ideally suited for horizontal scaling.

II - The schema in NoSQL databases is flexible.

III - NoSQL databases are more suitable than SQL databases for
complex querying procedures to get the relevant results.
-------------------------------------------------------

ACID - Atomiticity, Consistency, Isolation, Durability

BASE Model - Base Availability - Available all the Time and Does not Gurantee
Consistency, Soft State - Can change without input query to be available,
Eventual Consistency - After stop receiving input becomes consistent.
-- Used Mostly in NoSQL

--------------------------------------------------------
Types of NoSQL DB
Uses Cases
Examples

Types -- https://www.mongodb.com/nosql-explained
1. Key-value Store - bit hash tables keys and values personalize the data - redis cassandra dynamoDB -in memory
2. Document Store - json data - couchDB and MongoDB
3. Column store - hbase & hypertable
4. Graph-Based - Neo4j

Uses Cases

RealTime - Big Data - Analytics, Logging, and financial information
Semi Structured - Base to deal with information, couchDB and mongodb
IOT - Data generated by millions of devices
360 - data shared by multiple applications


Apache hbase - In details
1. open source, column oriented, distributed db
2. Storing large datasets, HDFS (hadoop distributed file System)
3. log Analytics and heavy applications
4. Optimized for reads, immediate Consistency
5. yahoo, xiaomi, salesforce

cassandra
1. column-oriented, rows and columns, change in column format
2. row can have multiple column, primary key for data distribution
3. good for writes, AP on CAP, Eventual Consistency
4. messaging, realtime sensors and ecommerce
5. ebay, netflix, github

MongoDB
1. docment store,enterprise and community version, schema-less db
2. json like document storage, faster queries, CP
3. HA, Horizontal Scalable, Immediate Consistency
4. Mobile applications, IOT and Content Management Systems
5. Cisco, Adobe and Google

https://simms-teach.com/howtos/106-config-putty.html
